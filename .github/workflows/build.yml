name: Build Executables

on:
  push:
    tags:
      - 'v*'

jobs:
  build:
    name: Build ${{ matrix.os }}-${{ matrix.arch }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          # Windows builds
          - os: windows-latest
            platform: windows
            arch: amd64
            output_name: file-server.exe
            asset_name: file-server-${{ github.ref_name }}-windows-amd64.exe
          - os: windows-latest
            platform: windows
            arch: 386
            output_name: file-server.exe
            asset_name: file-server-${{ github.ref_name }}-windows-386.exe
            python_arch: x86
            
          # Linux builds
          - os: ubuntu-latest
            platform: linux
            arch: amd64
            output_name: file-server
            asset_name: file-server-${{ github.ref_name }}-linux-amd64
          - os: ubuntu-latest
            platform: linux
            arch: arm64
            output_name: file-server
            asset_name: file-server-${{ github.ref_name }}-linux-arm64
            
          # macOS builds
          - os: macos-latest
            platform: darwin
            arch: amd64
            output_name: file-server
            asset_name: file-server-${{ github.ref_name }}-darwin-amd64
          - os: macos-latest
            platform: darwin
            arch: arm64
            output_name: file-server
            asset_name: file-server-${{ github.ref_name }}-darwin-arm64

    steps:
    - uses: actions/checkout@v3
    
    - name: Set up QEMU
      if: runner.os == 'Linux'
      uses: docker/setup-qemu-action@v2
      
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
        architecture: ${{ matrix.python_arch || 'x64' }}
        
    - name: Install PDM
      run: |
        python -m pip install --upgrade pip
        pip install pdm
        
    - name: Install dependencies
      run: pdm install
        
    - name: Install PyInstaller
      run: pdm add pyinstaller
        
    - name: Build executable (Windows/macOS)
      if: runner.os != 'Linux'
      run: |
        pdm run pyinstaller --onefile --name ${{ matrix.output_name }} file_server.py
        
    - name: Build executable (Linux ARM64)
      if: runner.os == 'Linux' && matrix.arch == 'arm64'
      uses: uraimo/run-on-arch-action@v2
      with:
        arch: aarch64
        distro: ubuntu20.04
        run: |
          apt-get update
          apt-get install -y python3-pip python3-venv
          python3 -m pip install pdm
          pdm install
          pdm add pyinstaller
          pdm run pyinstaller --onefile --name ${{ matrix.output_name }} file_server.py

    - name: Build executable (Linux AMD64)
      if: runner.os == 'Linux' && matrix.arch == 'amd64'
      run: |
        pdm run pyinstaller --onefile --name ${{ matrix.output_name }} file_server.py

    - name: Upload Release Asset
      uses: softprops/action-gh-release@v1
      if: startsWith(github.ref, 'refs/tags/')
      with:
        files: dist/${{ matrix.output_name }}
        name: ${{ matrix.asset_name }}
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
